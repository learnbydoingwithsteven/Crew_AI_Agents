"""Experiment Design example using CrewAI with Ollama."""

import sys
import os
import json
from typing import Dict, Any, Optional

# Add the parent directory to sys.path to allow importing from projects
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', '..')))

from crewai import Agent, Task, Crew, Process
from projects.utils import UseCase

class ExperimentDesignUseCase(UseCase):
    """Experiment Design use case implementation."""
    
    def setup_agents(self):
        """Set up agents for experiment design."""
        self.research_methodologist = Agent(
            role="Research Methodologist",
            goal="Design rigorous and valid experimental methods",
            backstory="You are an expert in research design with experience across multiple disciplines. "
                      "You specialize in creating robust methodologies that minimize bias and maximize validity.",
            allow_delegation=False,
            llm=self.llm,
            tools=self.tools,
            verbose=True
        )
        
        self.statistical_analyst = Agent(
            role="Statistical Analyst",
            goal="Develop appropriate statistical analysis plans for experiments",
            backstory="You are a statistician who specializes in experimental design. "
                     "You determine appropriate sample sizes, statistical tests, and analysis techniques "
                     "to ensure experiments have sufficient power and validity.",
            allow_delegation=False,
            llm=self.llm,
            tools=self.tools,
            verbose=True
        )
        
        self.research_ethicist = Agent(
            role="Research Ethicist",
            goal="Ensure research designs adhere to ethical standards",
            backstory="You specialize in research ethics and integrity. You identify potential "
                      "ethical concerns in research design and recommend mitigations.",
            allow_delegation=False,
            llm=self.llm,
            tools=self.tools,
            verbose=True
        )
        
        # Add agents to the list
        self.agents = [self.research_methodologist, self.statistical_analyst, self.research_ethicist]
    
    def setup_tasks(self, input_data: Optional[Dict[str, Any]] = None):
        """Set up tasks for experiment design.
        
        Args:
            input_data: Optional dictionary containing input data
        """
        # Process input data if provided
        research_question = input_data.get("query", "How do social media interventions affect mental health outcomes in adolescents?") if input_data else "How do social media interventions affect mental health outcomes in adolescents?"
        
        # Define tasks
        methodology_task = Task(
            description=f"Design a comprehensive experimental methodology to answer the research question: '{research_question}'. "
                       f"Include study design (e.g., RCT, quasi-experimental), participant selection, control variables, "
                       f"measurement instruments, and procedures. Address potential biases and confounding variables.",
            expected_output="A detailed experimental methodology plan with justifications for design choices.",
            agent=self.research_methodologist,
        )
        
        statistical_task = Task(
            description="Develop a statistical analysis plan based on the proposed methodology. "
                       "Include sample size calculation with power analysis, appropriate statistical tests, "
                       "effect size estimations, and handling of potential missing data or outliers.",
            expected_output="A comprehensive statistical analysis plan with power calculations and justifications for statistical approaches.",
            agent=self.statistical_analyst,
            context=[methodology_task]
        )
        
        ethics_task = Task(
            description="Evaluate the proposed experimental design for ethical considerations. "
                       "Identify potential ethical issues related to participant consent, privacy, "
                       "potential harms, vulnerable populations, and data security. Propose safeguards.",
            expected_output="An ethics review report with identified concerns and recommended safeguards.",
            agent=self.research_ethicist,
            context=[methodology_task, statistical_task]
        )
        
        # Add tasks to the list
        self.tasks = [methodology_task, statistical_task, ethics_task]

# Create instance for standalone usage
experiment_design = ExperimentDesignUseCase()

def run(input_data: Optional[Dict[str, Any]] = None) -> str:
    """Run the experiment design use case.
    
    Args:
        input_data: Optional dictionary containing input data
        
    Returns:
        The result of the experiment design process
    """
    # Create a new instance to ensure clean state
    use_case = ExperimentDesignUseCase()
    use_case.setup_agents()
    use_case.setup_tasks(input_data)
    use_case.setup_crew(Process.sequential)
    
    # Run the use case
    result = use_case.crew.kickoff()
    return result

if __name__ == "__main__":
    result = run()
    print(result)
